# Generated by Django 5.2.1 on 2025-06-05 03:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='teléfono')),
                ('cedula', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='cédula')),
                ('ultimo_acceso', models.DateTimeField(blank=True, null=True, verbose_name='último acceso')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'db_table': 'usuarios',
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_administrador', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nivel_acceso', models.CharField(default='admin', max_length=20, verbose_name='nivel de acceso')),
                ('permisos', models.JSONField(blank=True, default=dict, verbose_name='permisos')),
                ('sucursal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.sucursal', verbose_name='sucursal')),
            ],
            options={
                'verbose_name': 'administrador',
                'verbose_name_plural': 'administradores',
                'db_table': 'administradores',
                'ordering': ['usuario__username'],
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_empleado', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('codigo_empleado', models.CharField(max_length=20, unique=True, verbose_name='código de empleado')),
                ('ventanilla_asignada', models.CharField(blank=True, max_length=10, null=True, verbose_name='ventanilla asignada')),
                ('estado_conexion', models.CharField(choices=[('desconectado', 'Desconectado'), ('conectado', 'Conectado')], default='desconectado', max_length=20, verbose_name='estado de conexión')),
                ('fecha_ingreso', models.DateField(blank=True, null=True, verbose_name='fecha de ingreso')),
                ('configuracion_ui', models.JSONField(blank=True, default=dict, verbose_name='configuración UI')),
                ('sucursal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.sucursal', verbose_name='sucursal')),
            ],
            options={
                'verbose_name': 'empleado',
                'verbose_name_plural': 'empleados',
                'db_table': 'empleados',
                'ordering': ['usuario__username'],
            },
        ),
    ]
